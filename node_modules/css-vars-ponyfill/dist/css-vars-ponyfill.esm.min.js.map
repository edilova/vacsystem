{"version":3,"file":"css-vars-ponyfill.esm.min.js","sources":["../node_modules/get-css-data/dist/get-css-data.esm.js","../src/merge-deep.js","../node_modules/balanced-match/index.js","../src/parse-css.js","../src/stringify-css.js","../src/walk-css.js","../src/transform-css.js","../src/index.js"],"sourcesContent":["/*!\n * get-css-data\n * v1.6.1\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\n        return null;\n    });\n    function isValidCss() {\n        var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n        var isHTML = cssText.trim().charAt(0) === \"<\";\n        return !isHTML;\n    }\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    urlArray.forEach(function(url, i) {\n        var parser = document.createElement(\"a\");\n        parser.setAttribute(\"href\", url);\n        parser.href = String(parser.href);\n        var isCrossDomain = parser.host !== location.host;\n        var isIElte9 = document.all && !window.atob;\n        var isSameProtocol = parser.protocol === location.protocol;\n        if (isCrossDomain && isIElte9) {\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest();\n                xdr.open(\"GET\", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    if (isValidCss(xdr.responseText)) {\n                        onSuccess(xdr.responseText, i);\n                    } else {\n                        onError(xdr, i);\n                    }\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout(function() {\n                    xdr.send();\n                }, 0);\n            } else {\n                console.log(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol\");\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n                        onSuccess(xhr.responseText, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    });\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {object}   [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet's runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet's text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement: document,\n *     include    : 'style,link[rel=\"stylesheet\"]',\n *     exclude    : '[href=\"skip.css\"]',\n *     filter     : /red/,\n *     useCSSOM   : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        rootElement: options.rootElement || document,\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        useCSSOM: options.useCSSOM || false,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {\n        return !matchesSelector(node, settings.exclude);\n    });\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\n        return null;\n    });\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            var cssText = cssArray.join(\"\");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach(function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                });\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = \"\";\n                }\n                handleComplete();\n            }\n        });\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        });\n        importData.urls = importData.rules.map(function(rule) {\n            return rule.replace(regex.cssImports, \"$1\");\n        });\n        importData.absoluteUrls = importData.urls.map(function(url) {\n            return getFullUrl(url, baseUrl);\n        });\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        });\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach(function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    });\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach(function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    });\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach(function(node, i) {\n            var linkHref = node.getAttribute(\"href\");\n            var linkRel = node.getAttribute(\"rel\");\n            var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\n            var isStyle = node.nodeName === \"STYLE\";\n            if (isLink) {\n                getUrls(linkHref, {\n                    mimeType: \"text/css\",\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var sourceUrl = getFullUrl(linkHref, location.href);\n                        handleSuccess(cssText, i, node, sourceUrl);\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        cssArray[i] = \"\";\n                        settings.onError(xhr, node, url);\n                        handleComplete();\n                    }\n                });\n            } else if (isStyle) {\n                var cssText = node.textContent;\n                if (settings.useCSSOM) {\n                    cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {\n                        return rule.cssText;\n                    }).join(\"\");\n                }\n                handleSuccess(cssText, i, node, location.href);\n            } else {\n                cssArray[i] = \"\";\n                handleComplete();\n            }\n        });\n    } else {\n        settings.onComplete(\"\", []);\n    }\n}\n\nfunction getFullUrl(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument(\"\");\n    var b = d.createElement(\"base\");\n    var a = d.createElement(\"a\");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nexport default getCssData;\n//# sourceMappingURL=get-css-data.esm.js.map\n","// Functions\n// =============================================================================\n/**\n * Performs a deep merge of objects and returns new object. Does not modify\n * objects (immutable) and merges arrays via concatenation.\n *\n * @param {...object} objects - Objects to merge\n * @returns {object} New object with merged key/values\n */\nfunction mergeDeep(...objects) {\n    const isObject = obj => obj instanceof Object && obj.constructor === Object;\n\n    return objects.reduce((prev, obj) => {\n        Object.keys(obj).forEach(key => {\n            const pVal = prev[key];\n            const oVal = obj[key];\n\n            // if (Array.isArray(pVal) && Array.isArray(oVal)) {\n            //     prev[key] = pVal.concat(...oVal);\n            // }\n            if (isObject(pVal) && isObject(oVal)) {\n                prev[key] = mergeDeep(pVal, oVal);\n            }\n            else {\n                prev[key] = oVal;\n            }\n        });\n\n        return prev;\n    }, {});\n}\n\n\n// Export\n// =============================================================================\nexport default mergeDeep;\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Parses CSS string and generates AST object\n *\n * @param {string} css The CSS stringt to be converted to an AST\n * @returns {object}\n */\nfunction cssParse(css) {\n    const errors = [];\n\n    // Errors\n    // -------------------------------------------------------------------------\n    function error(msg) {\n        throw new Error(`CSS parse error: ${msg}`);\n    }\n\n    // RegEx\n    // -------------------------------------------------------------------------\n    // Match regexp and return captures\n    function match(re) {\n        const m = re.exec(css);\n\n        if (m) {\n            css = css.slice(m[0].length);\n\n            return m;\n        }\n    }\n\n    function whitespace() {\n        match(/^\\s*/);\n    }\n    function open() {\n        return match(/^{\\s*/);\n    }\n    function close() {\n        return match(/^}/);\n    }\n\n    // Comments\n    // -------------------------------------------------------------------------\n    function comment() {\n        whitespace();\n\n        if (css[0] !== '/' || css[1] !== '*') { return; }\n\n        let i = 2;\n        while (css[i] && (css[i] !== '*' || css[i + 1] !== '/')) { i++; }\n\n        // FIXED\n        if (!css[i]) { return error('end of comment is missing'); }\n\n        const str = css.slice(2, i);\n        css = css.slice(i + 2);\n\n        return { type: 'comment', comment: str };\n    }\n    function comments() {\n        const cmnts = [];\n\n        let c;\n\n        while ((c = comment())) {\n            cmnts.push(c);\n        }\n        return cmnts;\n    }\n\n    // Selector\n    // -------------------------------------------------------------------------\n    function selector() {\n        whitespace();\n        while (css[0] === '}') {\n            error('extra closing bracket');\n        }\n\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n        if (m)\n        { return m[0]\n            .trim() // remove all comments from selectors\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n                return m.replace(/,/g, '\\u200C');\n            })\n            .split(/\\s*(?![^(]*\\)),\\s*/)\n            .map(function(s) {\n                return s.replace(/\\u200C/g, ',');\n            }); }\n    }\n\n    // Declarations\n    // -------------------------------------------------------------------------\n    function declaration() {\n        match(/^([;\\s]*)+/); // ignore empty declarations + whitespace\n\n        const comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\n        let prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!prop) { return; }\n\n        prop = prop[0].trim();\n\n        if (!match(/^:\\s*/)) { return error('property missing \\':\\''); }\n\n        // Quotes regex repeats verbatim inside and outside parentheses\n        const val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n\n        const ret = { type: 'declaration', property: prop.replace(comment_regexp, ''), value: val ? val[0].replace(comment_regexp, '').trim() : '' };\n\n        match(/^[;\\s]*/);\n\n        return ret;\n    }\n    function declarations() {\n        if (!open()) { return error('missing \\'{\\''); }\n\n        let d,\n            decls = comments();\n\n        while ((d = declaration())) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n\n        if (!close()) { return error('missing \\'}\\''); }\n\n        return decls;\n    }\n\n    // Keyframes\n    // -------------------------------------------------------------------------\n    function keyframe() {\n        whitespace();\n\n        const vals = [];\n\n        let m;\n\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n\n        if (vals.length) { return { type: 'keyframe', values: vals, declarations: declarations() }; }\n    }\n    function at_keyframes() {\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n        if (!m) { return; }\n\n        const vendor = m[1];\n\n        m = match(/^([-\\w]+)\\s*/);\n        if (!m) { return error('@keyframes missing name'); } // identifier\n\n        const name = m[1];\n\n        if (!open()) { return error('@keyframes missing \\'{\\''); }\n\n        let frame,\n            frames = comments();\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n\n        if (!close()) { return error('@keyframes missing \\'}\\''); }\n\n        return { type: 'keyframes', name: name, vendor: vendor, keyframes: frames };\n    }\n\n    // @ Rules\n    // -------------------------------------------------------------------------\n    function at_page() {\n        const m = match(/^@page */);\n        if (m) {\n            const sel = selector() || [];\n            return { type: 'page', selectors: sel, declarations: declarations() };\n        }\n    }\n    function at_fontface() {\n        const m = match(/^@font-face\\s*/);\n        if (m) { return { type: 'font-face', declarations: declarations() }; }\n    }\n    function at_supports() {\n        const m = match(/^@supports *([^{]+)/);\n        if (m) { return { type: 'supports', supports: m[1].trim(), rules: rules() }; }\n    }\n    function at_host() {\n        const m = match(/^@host\\s*/);\n        if (m) { return { type: 'host', rules: rules() }; }\n    }\n    function at_media() {\n        const m = match(/^@media *([^{]+)/);\n        if (m) { return { type: 'media', media: m[1].trim(), rules: rules() }; }\n    }\n    function at_custom_m() {\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) { return { type: 'custom-media', name: m[1].trim(), media: m[2].trim() }; }\n    }\n    function at_document() {\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        // FIXED\n        if (m) { return { type: 'document', document: m[2].trim(), vendor: m[1] ? m[1].trim() : null, rules: rules() }; }\n    }\n    function at_x() {\n        const m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) { return { type: m[1], name: m[2].trim() }; }\n    }\n    function at_rule() {\n        whitespace();\n        if (css[0] === '@') { return at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x(); }\n    }\n\n    // Rules\n    // -------------------------------------------------------------------------\n    function rule() {\n        const sel = selector() || [];\n        if (!sel.length) { error('selector missing'); }\n\n        const decls = declarations();\n\n        return { type: 'rule', selectors: sel, declarations: decls };\n    }\n    function rules(core) {\n        if (!core && !open()) { return error('missing \\'{\\''); }\n\n        let node,\n            rules = comments();\n\n        while (css.length && (core || css[0] !== '}') && (node = at_rule() || rule())) {\n            rules.push(node);\n            rules = rules.concat(comments());\n        }\n\n        if (!core && !close()) { return error('missing \\'}\\''); }\n\n        return rules;\n    }\n\n    return { type: 'stylesheet', stylesheet: { rules: rules(true), errors: errors } };\n}\n\n\n// Exports\n// =============================================================================\nexport default cssParse;\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Compiles CSS AST to string\n *\n * @param {object}   tree CSS AST object\n * @param {string}   [delim=''] CSS rule delimiter\n * @param {function} cb Function to be called before each node is processed\n * @returns {string}\n */\nfunction stringifyCss(tree, delim = '', cb) {\n    const renderMethods = {\n        charset(node) {\n            return '@charset ' + node.name + ';';\n        },\n        comment(node) {\n            // Preserve ponyfill marker comments\n            return node.comment.indexOf('__CSSVARSPONYFILL') === 0 ? '/*' + node.comment + '*/' : '';\n        },\n        'custom-media'(node) {\n            return '@custom-media ' + node.name + ' ' + node.media + ';';\n        },\n        declaration(node) {\n            return node.property + ':' + node.value + ';';\n        },\n        document(node) {\n            return '@' + (node.vendor || '') + 'document ' + node.document + '{' + visit(node.rules) + '}';\n        },\n        'font-face'(node) {\n            return '@font-face' + '{' + visit(node.declarations) + '}';\n        },\n        host(node) {\n            return '@host' + '{' + visit(node.rules) + '}';\n        },\n        import(node) {\n            // FIXED\n            return '@import ' + node.name + ';';\n        },\n        keyframe(node) {\n            return node.values.join(',') + '{' + visit(node.declarations) + '}';\n        },\n        keyframes(node) {\n            return '@' + (node.vendor || '') + 'keyframes ' + node.name + '{' + visit(node.keyframes) + '}';\n        },\n        media(node) {\n            return '@media ' + node.media + '{' + visit(node.rules) + '}';\n        },\n        namespace(node) {\n            return '@namespace ' + node.name + ';';\n        },\n        page(node) {\n            return '@page ' + (node.selectors.length ? node.selectors.join(', ') : '') + '{' + visit(node.declarations) + '}';\n        },\n        rule(node) {\n            const decls = node.declarations;\n\n            if (decls.length) {\n                return node.selectors.join(',') + '{' + visit(decls) + '}';\n            }\n        },\n        supports(node) {\n            // FIXED\n            return '@supports ' + node.supports + '{' + visit(node.rules) + '}';\n        }\n    };\n\n    function visit(nodes) {\n        let buf = '';\n\n        for (let i = 0; i < nodes.length; i++) {\n            const n = nodes[i];\n\n            if (cb) {\n                cb(n);\n            }\n\n            const txt = renderMethods[n.type](n);\n\n            if (txt) {\n                buf += txt;\n\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n\n        return buf;\n    }\n\n    return visit(tree.stylesheet.rules);\n}\n\n\n// Exports\n// =============================================================================\nexport default stringifyCss;\n","/**\n * Based on rework-visit by reworkcss\n * https://github.com/reworkcss/rework-visit\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Visit `node` declarations recursively and invoke `fn(declarations, node)`.\n *\n * @param {object} node\n * @param {function} fn\n */\nfunction walkCss(node, fn){\n    node.rules.forEach(function(rule){\n        // @media etc\n        if (rule.rules) {\n            walkCss(rule, fn);\n\n            return;\n        }\n\n        // keyframes\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe){\n                if (keyframe.type === 'keyframe') {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n\n            return;\n        }\n\n        // @charset, @import etc\n        if (!rule.declarations) {\n            return;\n        }\n\n        fn(rule.declarations, node);\n    });\n}\n\n\n// Exports\n// =============================================================================\nexport default walkCss;\n","/**\n * Based on rework-vars by reworkcss\n * https://github.com/reworkcss/rework-vars\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced     from 'balanced-match';\nimport mergeDeep    from './merge-deep';\nimport parseCss     from './parse-css';\nimport stringifyCss from './stringify-css';\nimport walkCss      from './walk-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst VAR_PROP_IDENTIFIER = '--';\nconst VAR_FUNC_IDENTIFIER = 'var';\nconst variableStore       = {\n    // Persisted custom property values (matches modern browsers)\n    dom : {},\n    // Non-persisted custom properties values\n    temp: {},\n    // Persisted custom property values passed using options.variables\n    user: {}\n};\n\n\n// Functions\n// =============================================================================\n/**\n * Transforms W3C-style CSS variables to static values and returns an updated\n * CSS string.\n *\n * @param {object}   cssText CSS containing variable definitions and functions\n * @param {object}   [options] Options object\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyVars=true] Remove declarations that do not\n *                   contain a CSS variable from the return value. Note that\n *                   @font-face and @keyframe rules require all declarations to\n *                   be returned if a CSS variable is used.\n * @param {boolean}  [options.persist=false] Persists options.variables,\n *                   allowing variables set in previous calls to be applied in\n *                   subsequent calls.\n * @param {boolean}  [options.preserve=false] Preserve CSS variable definitions\n *                   and functions in the return value, allowing \"live\" variable\n *                   updates via JavaScript to continue working in browsers with\n *                   native CSS variable support.\n * @param {object}   [options.variables={}] CSS variable definitions to include\n *                   during transformation. Can be used to add new override\n *                   exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *                   warning. Passes 1) warningMessage as an argument.\n * @returns {string}\n */\nfunction transformVars(cssText, options = {}) {\n    const defaults = {\n        fixNestedCalc: true,\n        onlyVars     : true,\n        persist      : false,\n        preserve     : false,\n        variables    : {},\n        onWarning() {}\n    };\n    const settings = mergeDeep(defaults, options);\n    const map      = settings.persist ? variableStore.dom : variableStore.temp = JSON.parse(JSON.stringify(variableStore.dom));\n\n    // Convert cssText to AST (this could throw errors)\n    const cssTree = parseCss(cssText);\n\n    // Remove non-vars\n    if (settings.onlyVars) {\n        cssTree.stylesheet.rules = filterVars(cssTree.stylesheet.rules);\n    }\n\n    // Define variables\n    cssTree.stylesheet.rules.forEach(function(rule) {\n        const varNameIndices = [];\n\n        if (rule.type !== 'rule') {\n            return;\n        }\n\n        // only variables declared for `:root` are supported\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== ':root') {\n            return;\n        }\n\n        rule.declarations.forEach(function(decl, i) {\n            const prop = decl.property;\n            const value = decl.value;\n\n            if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                map[prop] = value;\n                varNameIndices.push(i);\n            }\n        });\n\n        // optionally remove `--*` properties from the rule\n        if (!settings.preserve) {\n            for (let i = varNameIndices.length - 1; i >= 0; i--) {\n                rule.declarations.splice(varNameIndices[i], 1);\n            }\n        }\n    });\n\n    // Restore persisted user values\n    Object.keys(variableStore.user).forEach(key => {\n        map[key] = variableStore.user[key];\n    });\n\n    // Handle variables defined in settings.variables\n    if (Object.keys(settings.variables).length) {\n        const newRule = {\n            declarations: [],\n            selectors   : [':root'],\n            type        : 'rule'\n        };\n\n        Object.keys(settings.variables).forEach(key => {\n            // Convert all property names to leading '--' style\n            const prop  = `--${key.replace(/^-+/, '')}`;\n            const value = settings.variables[key];\n\n            // Persist settings.variables values\n            if (settings.persist) {\n                variableStore.user[prop] = value;\n            }\n\n            // Update map value with settings.variables value\n            if (map[prop] !== value) {\n                map[prop] = value;\n\n                // Add new declaration to newRule\n                newRule.declarations.push({\n                    type    : 'declaration',\n                    property: prop,\n                    value   : value\n                });\n            }\n        });\n\n        // Append new :root ruleset\n        if (settings.preserve && newRule.declarations.length) {\n            cssTree.stylesheet.rules.push(newRule);\n        }\n    }\n\n    // Resolve variables\n    walkCss(cssTree.stylesheet, function(declarations, node) {\n        let decl;\n        let resolvedValue;\n        let value;\n\n        for (let i = 0; i < declarations.length; i++) {\n            decl = declarations[i];\n            value = decl.value;\n\n            // skip comments\n            if (decl.type !== 'declaration') {\n                continue;\n            }\n\n            // skip values that don't contain variable functions\n            if (!value || value.indexOf(VAR_FUNC_IDENTIFIER + '(') === -1) {\n                continue;\n            }\n\n            resolvedValue = resolveValue(value, map, settings);\n\n            if (resolvedValue !== decl.value) {\n                if (!settings.preserve) {\n                    decl.value = resolvedValue;\n                }\n                else {\n                    declarations.splice(i, 0, {\n                        type    : decl.type,\n                        property: decl.property,\n                        value   : resolvedValue\n                    });\n\n                    // skip ahead of preserved declaration\n                    i++;\n                }\n            }\n        }\n    });\n\n    // Fix nested calc() values\n    if (settings.fixNestedCalc) {\n        fixNestedCalc(cssTree.stylesheet.rules);\n    }\n\n    // Return CSS string\n    return stringifyCss(cssTree);\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Filters rules recursively, retaining only declarations that contain either a\n * CSS variable definition (property) or function (value). Maintains all\n * declarations for @font-face and @keyframes rules that contain a CSS\n * definition or function.\n *\n * @param {array} rules\n * @returns {array}\n */\nfunction filterVars(rules) {\n    return rules.filter(rule => {\n        // Rule, @font-face, @host, @page\n        if (rule.declarations) {\n            const declArray = rule.declarations.filter(d => {\n                const hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\n                const hasVarVal  = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + '(') > -1;\n\n                return hasVarProp || hasVarVal;\n            });\n\n            // For most rule types the filtered declarations should be applied.\n            // @font-face declaratons are unique and require all declarations to\n            // be retained if any declaration contains a CSS variable definition\n            // or value.\n            if (rule.type !== 'font-face') {\n                rule.declarations = declArray;\n            }\n\n            return Boolean(declArray.length);\n        }\n        // @keyframes\n        else if (rule.keyframes) {\n            // @keyframe rules require all declarations to be retained if any\n            // declaration contains a CSS variable definition or value.\n            return Boolean(rule.keyframes.filter(k =>\n                Boolean(k.declarations.filter(d => {\n                    const hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\n                    const hasVarVal  = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + '(') > -1;\n\n                    return hasVarProp || hasVarVal;\n                }).length)\n            ).length);\n        }\n        // @document, @media, @supports\n        else if (rule.rules) {\n            rule.rules = filterVars(rule.rules).filter(r => r.declarations && r.declarations.length);\n\n            return Boolean(rule.rules.length);\n        }\n\n        return true;\n    });\n}\n\n/**\n * Removes nested calc keywords for legacy browser compatibility.\n * Example: calc(1 + calc(2 + calc(3 + 3))) => calc(1 + (2 + (3 + 3)))\n *\n * @param {array} rules\n */\nfunction fixNestedCalc(rules) {\n    const reCalcExp = /(-[a-z]+-)?calc\\(/; // Match \"calc(\" or \"-vendor-calc(\"\n\n    rules.forEach(rule => {\n        if (rule.declarations) {\n            rule.declarations.forEach(decl => {\n                let oldValue = decl.value;\n                let newValue = '';\n\n                while (reCalcExp.test(oldValue)) {\n                    const rootCalc = balanced('calc(', ')', oldValue || '');\n\n                    oldValue = oldValue.slice(rootCalc.end);\n\n                    while (reCalcExp.test(rootCalc.body)) {\n                        const nestedCalc = balanced(reCalcExp, ')', rootCalc.body);\n\n                        rootCalc.body = `${nestedCalc.pre}(${nestedCalc.body})${nestedCalc.post}`;\n                    }\n\n                    newValue += `${rootCalc.pre}calc(${rootCalc.body}`;\n                    newValue += !reCalcExp.test(oldValue) ? `)${rootCalc.post}` : '';\n                }\n\n                decl.value = newValue || decl.value;\n            });\n        }\n    });\n}\n\n/**\n * Resolves CSS var() function(s) with `map` data or fallback value(s). Returns\n * original `value` if unable to resolve.\n *\n * @param {string} value String containing CSS var() functions to resolve\n * @param {object} map CSS custom property key/values\n * @param {object} settings Settings object passed from transformVars()\n * @param {string} [__recursiveFallback] Fallback when unable to resolve CSS\n *                 var() function to a map or fallback value. Allows restoring\n *                 original var() function from recursive resolveValue() calls.\n * @return {string} CSS value with var() function(s) resolved to map or fallback\n *                  value.\n *\n * @example\n *\n *   resolveValue('10px var(--x) 30px', {'--x':'20px'}, {...settings});\n *   // => '10px 20px 30px'\n *\n *   resolveValue('10px', {}, {...settings});\n *   // => '10px'\n */\nfunction resolveValue(value, map, settings = {}, __recursiveFallback) {\n    const varFuncData  = balanced('var(', ')', value);\n    const warningIntro = 'CSS transform warning:';\n\n    /**\n     * Resolves contents of CSS custom property function\n     *\n     * @param {string} value String containing contents of CSS var() function\n     * @returns {string}\n     *\n     * @example\n     *\n     *   resolveFunc('--x, var(--y, green)')\n     *   // => map['--x'] or map['--y'] or 'green'\n     *\n     *   resolveFunc('--fail')\n     *   // => 'var(--fail)' when map['--fail'] does not exist\n     */\n    function resolveFunc(value) {\n        const name               = value.split(',')[0];\n        const fallback           = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n        const match              = map.hasOwnProperty(name) ? String(map[name]) : undefined;\n        const replacement        = match || (fallback ? String(fallback) : undefined);\n        const unresolvedFallback = __recursiveFallback || value;\n\n        if (!match) {\n            settings.onWarning(`${warningIntro} variable \"${name}\" is undefined`);\n        }\n\n        if (replacement && replacement !== 'undefined' && replacement.length > 0) {\n            return resolveValue(replacement, map, settings, unresolvedFallback);\n        }\n        else {\n            return `var(${unresolvedFallback})`;\n        }\n    }\n\n    if (!varFuncData) {\n        if (value.indexOf('var(') !== -1) {\n            settings.onWarning(`${warningIntro} missing closing \")\" in the value \"${value}\"`);\n        }\n\n        return value;\n    }\n    else if (varFuncData.body.trim().length === 0) {\n        settings.onWarning(`${warningIntro} var() must contain a non-whitespace string`);\n\n        return value;\n    }\n    else {\n        return (\n            varFuncData.pre\n            + resolveFunc(varFuncData.body)\n            + resolveValue(varFuncData.post, map, settings)\n        );\n    }\n}\n\n\n// Exports\n// =============================================================================\nexport default transformVars;\nexport { variableStore };","// Dependencies\n// =============================================================================\nimport getCssData          from 'get-css-data';\nimport mergeDeep           from './merge-deep';\nimport transformCss        from './transform-css';\nimport { variableStore }   from './transform-css';\nimport { name as pkgName } from '../package.json';\n\n\n// Constants & Variables\n// =============================================================================\nconst isBrowser       = typeof window !== 'undefined';\nconst isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports('(--a: 0)');\n\nconst defaults = {\n    // Sources\n    rootElement  : isBrowser ? document : null,\n    include      : 'style,link[rel=stylesheet]',\n    exclude      : '',\n    // Options\n    fixNestedCalc: true,  // transformCss\n    onlyLegacy   : true,  // cssVars\n    onlyVars     : false, // cssVars, transformCss\n    preserve     : false, // transformCss\n    shadowDOM    : false, // cssVars\n    silent       : false, // cssVars\n    updateDOM    : true,  // cssVars\n    updateURLs   : true,  // cssVars\n    variables    : {},    // transformCss\n    watch        : null,  // cssVars\n    // Callbacks\n    onBeforeSend() {},    // cssVars\n    onSuccess() {},       // cssVars\n    onWarning() {},       // transformCss\n    onError() {},         // cssVars\n    onComplete() {}       // cssVars\n};\nconst regex = {\n    // CSS comments\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    // CSS keyframes (@keyframes & @-VENDOR-keyframes)\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\n    // CSS root vars\n    cssRootRules: /(?::root\\s*{\\s*[^}]*})/g,\n    // CSS url(...) values\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n    // CSS variable :root declarations and var() function values\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\n\n// Mutation observer referece created via options.watch\nlet cssVarsObserver  = null;\n\n// Indicates if document-level custom property values have been parsed, stored,\n// and ready for use with options.shadowDOM\nlet isShadowDOMReady = false;\n\n\n// Functions\n// =============================================================================\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.onlyVars=false] Determines if CSS rulesets and\n *                   declarations without a custom property value should be\n *                   removed from the ponyfill-generated CSS\n * @param {boolean}  [options.preserve=false] Determines if the original CSS\n *                   custom property declaration will be retained in the\n *                   ponyfill-generated CSS.\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls.\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values.\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) a reference to\n *                   the appended <style> node, and 3) an object containing all\n *                   custom properies names and values.\n *\n * @example\n *\n *   cssVars({\n *     rootElement  : document,\n *     include      : 'style,link[rel=\"stylesheet\"]',\n *     exclude      : '',\n *     fixNestedCalc: true,\n *     onlyLegacy   : true,\n *     onlyVars     : false,\n *     preserve     : false,\n *     shadowDOM    : false,\n *     silent       : false,\n *     updateDOM    : true,\n *     updateURLs   : true,\n *     variables    : {\n *       // ...\n *     },\n *     watch        : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     },\n *     onWarning(message) {\n *       // ...\n *     },\n *     onError(message, node) {\n *       // ...\n *     },\n *     onComplete(cssText, styleNode) {\n *       // ...\n *     }\n *   });\n */\nfunction cssVars(options = {}) {\n    const settings    = mergeDeep(defaults, options);\n    const styleNodeId = pkgName;\n\n    // Always exclude styleNodeId element, which is the generated <style> node\n    // containing previously transformed CSS.\n    settings.exclude = `#${styleNodeId}` + (settings.exclude ? `,${settings.exclude}` : '');\n\n    function handleError(message, sourceNode, xhr, url) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.error(`${message}\\n`, sourceNode);\n        }\n\n        settings.onError(message, sourceNode, xhr, url);\n    }\n\n    function handleWarning(message) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.warn(message);\n        }\n\n        settings.onWarning(message);\n    }\n\n    // Exit if non-browser environment (e.g. Node)\n    if (!isBrowser) {\n        return;\n    }\n\n    // Verify readyState to ensure all <link> and <style> nodes are available\n    if (document.readyState !== 'loading') {\n        const isShadowElm = settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host;\n\n        // Native support\n        if (isNativeSupport && settings.onlyLegacy) {\n            // Apply settings.variables\n            if (settings.updateDOM) {\n                const targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n\n                // Set variables using native methods\n                Object.keys(settings.variables).forEach(key => {\n                    // Convert all property names to leading '--' style\n                    const prop  = `--${key.replace(/^-+/, '')}`;\n                    const value = settings.variables[key];\n\n                    targetElm.style.setProperty(prop, value);\n                });\n            }\n        }\n        // Ponyfill: Handle rootElement set to a shadow host or root\n        else if (isShadowElm && !isShadowDOMReady) {\n            // Get all document-level CSS\n            getCssData({\n                rootElement: defaults.rootElement,\n                include: defaults.include,\n                exclude: settings.exclude,\n                onSuccess(cssText, node, url) {\n                    const cssRootDecls = (cssText.match(regex.cssRootRules) || []).join('');\n\n                    // Return only matching :root {...} blocks\n                    return cssRootDecls || false;\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    // Transform CSS, which stores custom property values from\n                    // cssText in variableStore. This step ensures that\n                    // variableStore contains all document-level custom property\n                    // values for subsequent ponyfill calls.\n                    transformCss(cssText, {\n                        persist: true\n                    });\n\n                    isShadowDOMReady = true;\n\n                    // Call the ponyfill again to process the rootElement\n                    // initially specified. Values stored in variableStore will\n                    // be used to transform values in shadow host/root elements.\n                    cssVars(settings);\n                }\n            });\n        }\n        // Ponyfill: Process CSS\n        else {\n            // Add / recreate MutationObserver\n            if (settings.watch) {\n                addMutationObserver(settings, styleNodeId);\n            }\n            // Disconnect existing\n            else if (settings.watch === false && cssVarsObserver) {\n                cssVarsObserver.disconnect();\n            }\n\n            getCssData({\n                rootElement: settings.rootElement,\n                include: settings.include,\n                exclude: settings.exclude,\n                // This filter does a test on each block of CSS. An additional\n                // filter is used in the parser to remove individual\n                // declarations.\n                filter: settings.onlyVars ? regex.cssVars : null,\n                onBeforeSend: settings.onBeforeSend,\n                onSuccess(cssText, node, url) {\n                    const returnVal = settings.onSuccess(cssText, node, url);\n\n                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? '' : returnVal || cssText;\n\n                    // Convert relative url(...) values to absolute\n                    if (settings.updateURLs) {\n                        const cssUrls = cssText\n                            // Remove comments to avoid processing @import in comments\n                            .replace(regex.cssComments, '')\n                            // Match url(...) values\n                            .match(regex.cssUrls) || [];\n\n                        cssUrls.forEach(cssUrl => {\n                            const oldUrl = cssUrl.replace(regex.cssUrls, '$1');\n                            const newUrl = getFullUrl(oldUrl, url);\n\n                            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n                        });\n                    }\n\n                    return cssText;\n                },\n                onError(xhr, node, url) {\n                    const responseUrl = xhr.responseURL || getFullUrl(url, location.href);\n                    const statusText  = xhr.statusText ? `(${xhr.statusText})` : 'Unspecified Error' + (xhr.status === 0 ? ' (possibly CORS related)' : '');\n                    const errorMsg    = `CSS XHR Error: ${responseUrl} ${xhr.status} ${statusText}`;\n\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    const cssMarker = /\\/\\*__CSSVARSPONYFILL-(\\d+)__\\*\\//g;\n                    let   styleNode = null;\n\n                    // Concatenate cssArray items, replacing those that do not\n                    // contain a CSS custom property declaraion or function with\n                    // a temporary marker . After the CSS is transformed, the\n                    // markers will be replaced with the matching cssArray item.\n                    // This optimization is done to avoid processing CSS that\n                    // will not change as a results of the ponyfill.\n                    cssText = cssArray.map((css, i) => regex.cssVars.test(css) ? css : `/*__CSSVARSPONYFILL-${i}__*/`).join('');\n\n                    try {\n                        cssText = transformCss(cssText, {\n                            fixNestedCalc: settings.fixNestedCalc,\n                            onlyVars     : settings.onlyVars,\n                            persist      : settings.updateDOM,\n                            preserve     : settings.preserve,\n                            variables    : settings.variables,\n                            onWarning    : handleWarning\n                        });\n\n                        const hasKeyframes = regex.cssKeyframes.test(cssText);\n\n                        // Replace markers with appropriate cssArray item\n                        cssText = cssText.replace(cssMarker, (match, group1) => cssArray[group1]);\n\n                        if (settings.updateDOM && nodeArray && nodeArray.length) {\n                            const lastNode = nodeArray[nodeArray.length - 1];\n\n                            styleNode = settings.rootElement.querySelector(`#${styleNodeId}`) || document.createElement('style');\n                            styleNode.setAttribute('id', styleNodeId);\n\n                            if (styleNode.textContent !== cssText) {\n                                styleNode.textContent = cssText;\n                            }\n\n                            // Insert <style> element after last nodeArray item\n                            if (lastNode.nextSibling !== styleNode && lastNode.parentNode) {\n                                lastNode.parentNode.insertBefore(styleNode, lastNode.nextSibling);\n                            }\n\n                            if (hasKeyframes) {\n                                fixKeyframes(settings.rootElement);\n                            }\n                        }\n                    }\n                    catch(err) {\n                        let errorThrown = false;\n\n                        // Iterate cssArray to detect CSS text and node(s)\n                        // responsibile for error.\n                        cssArray.forEach((cssText, i) => {\n                            try {\n                                cssText = transformCss(cssText, settings);\n                            }\n                            catch(err) {\n                                const errorNode = nodeArray[i - 0];\n\n                                errorThrown = true;\n                                handleError(err.message, errorNode);\n                            }\n                        });\n\n                        // In the event the error thrown was not due to\n                        // transformCss, handle the original error.\n                        /* istanbul ignore next */\n                        if (!errorThrown) {\n                            handleError(err.message || err);\n                        }\n                    }\n\n                    // Process shadow DOM\n                    if (settings.shadowDOM) {\n                        const elms = [\n                            settings.rootElement,\n                            ...settings.rootElement.querySelectorAll('*')\n                        ];\n\n                        // Iterates over all elements in rootElement and calls\n                        // cssVars on each shadowRoot, passing document-level\n                        // custom properties as options.variables.\n                        for (let i = 0, elm; (elm = elms[i]); ++i) {\n                            if (elm.shadowRoot && elm.shadowRoot.querySelector('style')) {\n                                const shadowSettings = mergeDeep(settings, {\n                                    rootElement: elm.shadowRoot,\n                                    variables  : variableStore.dom\n                                });\n\n                                cssVars(shadowSettings);\n                            }\n                        }\n                    }\n\n                    settings.onComplete(cssText, styleNode, JSON.parse(JSON.stringify(settings.updateDOM ? variableStore.dom : variableStore.temp)));\n                }\n            });\n        }\n\n    }\n    // Delay function until DOMContentLoaded event is fired\n    /* istanbul ignore next */\n    else {\n        document.addEventListener('DOMContentLoaded', function init(evt) {\n            cssVars(options);\n\n            document.removeEventListener('DOMContentLoaded', init);\n        });\n    }\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Creates mutation observer that executes the ponyfill when a <link> or <style>\n * DOM mutation is observed.\n *\n * @param {object} settings\n * @param {string} ignoreId\n */\nfunction addMutationObserver(settings, ignoreId) {\n    if (!window.MutationObserver) {\n        return;\n    }\n\n    const isLink  = node => node.tagName === 'LINK' && (node.getAttribute('rel') || '').indexOf('stylesheet') !== -1;\n    const isStyle = node => node.tagName === 'STYLE' && (ignoreId ? node.id !== ignoreId : true);\n\n    let debounceTimer = null;\n\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n    }\n\n    settings.watch = defaults.watch;\n\n    cssVarsObserver = new MutationObserver(function(mutations) {\n        let isUpdateMutation = false;\n\n        mutations.forEach(mutation => {\n            if (mutation.type === 'attributes') {\n                isUpdateMutation = isLink(mutation.target) || isStyle(mutation.target);\n            }\n            else if (mutation.type === 'childList') {\n                const addedNodes   = Array.apply(null, mutation.addedNodes);\n                const removedNodes = Array.apply(null, mutation.removedNodes);\n\n                isUpdateMutation = [].concat(addedNodes, removedNodes).some(node => {\n                    const isValidLink  = isLink(node) && !node.disabled;\n                    const isValidStyle = isStyle(node) && !node.disabled && regex.cssVars.test(node.textContent);\n\n                    return (isValidLink || isValidStyle);\n                });\n            }\n\n            if (isUpdateMutation) {\n                clearTimeout(debounceTimer);\n\n                debounceTimer = setTimeout(function() {\n                    cssVars(settings);\n                }, 1);\n            }\n        });\n    });\n\n    cssVarsObserver.observe(document.documentElement, {\n        attributes     : true,\n        attributeFilter: ['disabled', 'href'],\n        childList      : true,\n        subtree        : true\n    });\n}\n\n/**\n * Fixes issue with keyframe properties set using CSS custom property not being\n * applied properly in some legacy (IE) and modern (Safari) browsers.\n *\n * @param {object} rootElement\n */\nfunction fixKeyframes(rootElement) {\n    const animationNameProp = [\n        'animation-name',\n        '-moz-animation-name',\n        '-webkit-animation-name'\n    ].filter(prop => getComputedStyle(document.body)[prop])[0];\n\n    if (animationNameProp) {\n        const allNodes      = rootElement.getElementsByTagName('*');\n        const keyframeNodes = [];\n        const nameMarker    = '__CSSVARSPONYFILL-KEYFRAMES__';\n\n        // Modify animation name\n        for (let i = 0, len = allNodes.length; i < len; i++) {\n            const node          = allNodes[i];\n            const animationName = getComputedStyle(node)[animationNameProp];\n\n            if (animationName !== 'none') {\n                node.style[animationNameProp] += nameMarker;\n                keyframeNodes.push(node);\n            }\n        }\n\n        // Force reflow\n        void document.body.offsetHeight;\n\n        // Restore animation name\n        for (let i = 0, len = keyframeNodes.length; i < len; i++) {\n            const nodeStyle = keyframeNodes[i].style;\n\n            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, '');\n        }\n    }\n}\n\n/**\n * Returns fully qualified URL from relative URL and (optional) base URL\n *\n * @param   {string} url\n * @param   {string} [base=location.href]\n * @returns {string}\n */\nfunction getFullUrl(url, base = location.href) {\n    const d = document.implementation.createHTMLDocument('');\n    const b = d.createElement('base');\n    const a = d.createElement('a');\n\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n\n    return a.href;\n}\n\n\n// Export\n// =============================================================================\nexport default cssVars;\n"],"names":["getUrls","urls","options","arguments","length","undefined","settings","mimeType","onBeforeSend","Function","prototype","onSuccess","onError","onComplete","urlArray","Array","isArray","urlQueue","apply","map","x","isValidCss","trim","charAt","xhr","urlIndex","responseText","returnVal","indexOf","forEach","url","i","parser","document","createElement","setAttribute","href","String","isCrossDomain","host","location","isIElte9","all","window","atob","isSameProtocol","protocol","xdr","XDomainRequest","open","timeout","onprogress","ontimeout","onload","onerror","err","setTimeout","send","console","log","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","regex","cssComments","cssImports","rootElement","include","exclude","filter","useCSSOM","sourceNodes","querySelectorAll","node","matchesSelector","cssArray","handleComplete","cssText","join","handleSuccess","cssIndex","sourceUrl","resolveImports","baseUrl","callbackFn","__errorData","__errorRules","importData","parseImportData","rules","absoluteUrls","responseImportData","rule","replace","absoluteRules","push","responseArray","importText","Boolean","resolvedCssText","errorData","data","test","ignoreRules","match","getFullUrl","oldUrl","newUrl","linkHref","getAttribute","linkRel","isLink","nodeName","toLowerCase","isStyle","textContent","sheet","cssRules","base","d","implementation","createHTMLDocument","b","a","head","appendChild","body","elm","selector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","mergeDeep","isObject","obj","Object","constructor","objects","reduce","prev","keys","key","pVal","oVal","balanced","str","RegExp","maybeMatch","r","range","start","end","pre","slice","post","reg","m","begs","beg","left","right","result","ai","bi","pop","cssParse","css","error","msg","Error","re","exec","whitespace","close","comment","type","comments","c","cmnts","split","s","declaration","comment_regexp","prop","val","ret","property","value","declarations","decls","concat","keyframe","vals","values","at_rule","vendor","name","frame","frames","keyframes","at_keyframes","supports","at_supports","at_host","media","at_media","at_custom_m","selectors","at_page","at_document","at_fontface","at_x","core","sel","stylesheet","errors","stringifyCss","tree","delim","cb","renderMethods","charset","visit","import","namespace","page","nodes","buf","n","txt","walkCss","fn","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","variableStore","dom","temp","user","transformVars","fixNestedCalc","onlyVars","persist","preserve","variables","onWarning","JSON","parse","stringify","cssTree","parseCss","filterVars","varNameIndices","decl","splice","newRule","resolvedValue","resolveValue","declArray","hasVarProp","hasVarVal","k","reCalcExp","oldValue","newValue","rootCalc","nestedCalc","__recursiveFallback","varFuncData","warningIntro","fallback","hasOwnProperty","replacement","unresolvedFallback","resolveFunc","isBrowser","isNativeSupport","CSS","defaults","onlyLegacy","shadowDOM","silent","updateDOM","updateURLs","watch","cssKeyframes","cssRootRules","cssUrls","cssVars","cssVarsObserver","isShadowDOMReady","styleNodeId","pkgName","handleError","message","sourceNode","handleWarning","warn","isShadowElm","shadowRoot","targetElm","documentElement","style","setProperty","nodeArray","transformCss","addMutationObserver","disconnect","cssUrl","responseUrl","responseURL","statusText","styleNode","hasKeyframes","group1","lastNode","querySelector","nextSibling","parentNode","insertBefore","fixKeyframes","errorThrown","errorNode","elms","addEventListener","init","evt","removeEventListener","ignoreId","MutationObserver","tagName","id","debounceTimer","mutations","isUpdateMutation","mutation","target","addedNodes","removedNodes","some","isValidLink","disabled","isValidStyle","clearTimeout","observe","attributes","attributeFilter","childList","subtree","animationNameProp","getComputedStyle","allNodes","getElementsByTagName","keyframeNodes","len","offsetHeight","nodeStyle"],"mappings":"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"}