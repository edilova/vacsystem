{"remainingRequest":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js!/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Workers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Workers.vue","mtime":1550398352859},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { shuffleArray } from '@/shared/utils';\nimport cTable from './Table.vue';\nimport axios from 'axios';\n\nvar someData = function someData() {\n  return shuffleArray([{\n    ИИН: 12345678,\n    ФИО: 'Edilova Aruzhan',\n    специальность: 'spec',\n    отдел: 'depart',\n    номер: '+7 707 123 34 45'\n  }]);\n};\n\nexport default {\n  name: \"Workers\",\n  components: {\n    cTable: cTable\n  },\n  data: function data() {\n    return {\n      items: someData,\n      itemsArray: someData(),\n      message: \"\",\n      todos: \"\",\n      departments: \"\",\n      specialities: \"\",\n      okrugs: \"\",\n      getWorkers: \"\",\n      listOfEmp: \"\",\n      // todos.name:\n      todosname: \"\",\n      options: ['a', 'a'],\n      selectedSpec: \"\",\n      selectedDep: \"\",\n      selectedSO: \"\",\n      fields: [{\n        key: 'ИИН',\n        label: 'User',\n        sortable: true\n      }, {\n        key: 'ФИО'\n      }, {\n        key: 'специальность'\n      }, {\n        key: 'отдел',\n        sortable: true\n      }, {\n        key: 'номер'\n      }],\n      addWorkerPage: 'notadd',\n      IIN: \"\",\n      passw: \"\",\n      fio: \"\",\n      spec: \"\",\n      otdel: \"\",\n      phone: \"\",\n      currentPage: 1,\n      perPage: 10,\n      totalRows: 0\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  methods: {\n    getBadge: function getBadge(status) {\n      return status === 'Active' ? 'success' : status === 'Inactive' ? 'secondary' : status === 'Pending' ? 'warning' : status === 'Banned' ? 'danger' : 'primary';\n    },\n    getRowCount: function getRowCount(items) {\n      return items.length;\n    },\n    userLink: function userLink(id) {\n      return \"users/\".concat(id.toString());\n    },\n    rowClicked: function rowClicked(item) {\n      var userLink = this.userLink(item.id);\n      this.$router.push({\n        path: userLink\n      });\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        // commit('auth_request')\n        console.log('promise example ');\n        var token = sessionStorage.getItem('token');\n        axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n        console.log(axios.defaults.headers, 'headers in get'); //get Department\n\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/employee/Employee/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('getWorkers', resp.data);\n          _this.getWorkers = resp.data.results;\n          resolve(resp);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      });\n    },\n    listOfWorkers: function listOfWorkers($FullName) {\n      var _this2 = this;\n\n      this.addWorkerPage = $FullName;\n      return new Promise(function (resolve, reject) {\n        // commit('auth_request')\n        console.log('promise example ');\n        var token = sessionStorage.getItem('token');\n        axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n        console.log(axios.defaults.headers, 'headers in get'); //get Department\n\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/employee/Employee/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('getWorkers', resp.data);\n          _this2.getWorkers = resp.data.results;\n          resolve(resp);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      });\n    },\n    pageAddW: function pageAddW($FullName) {\n      var _this3 = this;\n\n      this.addWorkerPage = $FullName;\n      return new Promise(function (resolve, reject) {\n        // commit('auth_request')\n        console.log('promise example ');\n        var token = sessionStorage.getItem('token');\n        axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n        console.log(axios.defaults.headers, 'headers in get'); //get Department\n\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/employee/Department/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('DEPARTMENT', resp.data);\n          _this3.departments = resp.data.results;\n          resolve(resp);\n        }).catch(function (err) {\n          console.log(err);\n        }); //get Speciality\n\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/employee/EmployeeType/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('SPECIALITY', resp.data);\n          _this3.specialities = resp.data.results;\n          resolve(resp);\n        }).catch(function (err) {\n          console.log(err);\n        }); //get Sel'skii okrug\n\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/farmer/RuralDistrict/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('OKRUG', resp.data);\n          _this3.okrugs = resp.data.results;\n          resolve(resp);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      });\n    },\n    createNew: function createNew() {\n      var id = this.IIN;\n      var employeeskey = this.passw;\n      var name = this.fio;\n      var employeetype = this.selectedSpec;\n      var department = this.selectedDep;\n      var ruraldistrict = this.selectedSO;\n      var phone = this.phone;\n      console.log(ruraldistrict);\n      this.$store.dispatch('createWorker', {\n        id: id,\n        employeeskey: employeeskey,\n        name: name,\n        employeetype: employeetype,\n        department: department,\n        ruraldistrict: ruraldistrict,\n        phone: phone\n      }).then(function () {\n        console.log(\"TIUTUTU\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(\"in creat new fuction\");\n    }\n  }\n};",{"version":3,"sources":["Workers.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n      <div class=\"row\">\n        <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">\n          <b-button v-on:click=\"pageAddW('add')\"  block variant=\"primary\" class=\"mb-2\" >Добавить работника</b-button>\n        </b-col>\n        <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"ml-1 mb-3 mb-xl-0 \">\n          <b-button v-on:click=\"listOfWorkers('notadd')\"  block variant=\"primary\" class=\"mb-2\" >Список  работников</b-button>\n        </b-col>\n      </div>\n\n\n      <div  v-show=\"addWorkerPage == 'notadd'\">\n        <b-card>\n          <!--{{getWorkers}}-->\n          <table class=\"table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">ИИН</th>\n              <th scope=\"col\">ФИО</th>\n              <th scope=\"col\">Специальность</th>\n              <th scope=\"col\">Департамент</th>\n              <th scope=\"col\">С.О</th>\n              <th scope=\"col\">Тел.</th>\n            </tr>\n            </thead>\n            <tbody v-for=\"emp in getWorkers\">\n            <tr>\n              <th scope=\"row\">{{emp.id}}</th>\n              <td>{{emp.name}}</td>\n              <td>{{emp.employeetype}}</td>\n              <td>{{emp.department}}</td>\n              <td>{{emp.ruraldistrict}}</td>\n              <td>{{emp.phone}}</td>\n            </tr>\n            </tbody>\n          </table>\n          <nav>\n            <b-pagination :total-rows=\"totalRows\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n          </nav>\n        </b-card>\n      </div>\n\n      <div  v-show=\"addWorkerPage == 'add'\">\n        <b-card>\n          <b-form>\n            <b-form-group\n\n              description=\"ИИН Работника\"\n              label=\"ИИН Работника\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"IIN\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n\n            <b-form-group\n              description=\"пароль\"\n              label=\"Пароль\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"passw\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n            <b-form-group\n              description=\"Полное имя Работника\"\n              label=\"ФИО\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"fio\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Специальность</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\" v-model=\"selectedSpec\" >\n                  <option disabled value=\"\">Выберите специальность</option>\n                  <option v-for=\"spec in specialities\" v-bind:value=\"spec.id\">{{spec.name}}</option>\n                </select>\n              </div>\n\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Отдел</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\"  v-model=\"selectedDep\">\n                  <option disabled value=\"\">Выберите отдел</option>\n                  <option  v-for=\"de in departments\" v-bind:value=\"de.id\">{{de.name}}\n                  </option>\n\n                </select>\n              </div>\n\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Сельский округ</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\"  v-model=\"selectedSO\">\n                  <option disabled value=\"\">Выберите сельский округ</option>\n                  <option  v-for=\"so in okrugs\" v-bind:value=\"so.id\">{{so.name}}\n                  </option>\n                </select>\n              </div>\n\n            </div>\n\n\n\n            <b-form-group\n              description=\"Номер телефона Работника\"\n              label=\"Номер телефона\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input  v-model=\"phone\"  id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n          </b-form>\n          <div class=\"form-actions\">\n            <b-button v-on:click=\"createNew()\" type=\"submit\" variant=\"primary\">Добавить работника</b-button>\n          </div>\n        </b-card>\n\n\n      </div>\n\n\n{{selectedDep}}\n    </div>\n</template>\n\n<script>\n  import { shuffleArray } from '@/shared/utils'\n  import cTable from './Table.vue'\n  import axios from 'axios'\n\n  const someData = () => shuffleArray([\n    {ИИН: 12345678, ФИО: 'Edilova Aruzhan' , специальность: 'spec', отдел: 'depart', номер: '+7 707 123 34 45'},\n  ])\n    export default {\n        name: \"Workers\",\n      components: {cTable},\n      data: () => {\n        return {\n          items: someData,\n          itemsArray: someData(),\n          message: \"\",\n          todos: \"\",\n          departments:\"\",\n          specialities:\"\",\n          okrugs: \"\",\n          getWorkers:\"\",\n          listOfEmp: \"\",\n          // todos.name:\n          todosname:\"\",\n          options:['a','a'],\n          selectedSpec: \"\",\n          selectedDep: \"\",\n          selectedSO: \"\",\n          fields: [\n            {key: 'ИИН', label: 'User', sortable: true},\n            {key: 'ФИО'},\n            {key: 'специальность'},\n            {key: 'отдел', sortable: true},\n            {key: 'номер'},\n          ],\n          addWorkerPage: 'notadd',\n          IIN: \"\",\n          passw: \"\",\n          fio: \"\",\n          spec:\"\",\n          otdel:\"\",\n          phone:\"\",\n            currentPage: 1,\n            perPage: 10,\n            totalRows: 0\n        }\n      },\n        created: function () {\n            this.fetchData();\n        },\n      methods:{\n          getBadge (status) {\n              return status === 'Active' ? 'success'\n                  : status === 'Inactive' ? 'secondary'\n                      : status === 'Pending' ? 'warning'\n                          : status === 'Banned' ? 'danger' : 'primary'\n          },\n          getRowCount (items) {\n              return items.length\n          },\n          userLink (id) {\n              return `users/${id.toString()}`\n          },\n          rowClicked (item) {\n              const userLink = this.userLink(item.id)\n              this.$router.push({path: userLink})\n          },\n\n          fetchData: function () {\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getWorkers',resp.data)\n                          this.getWorkers = resp.data.results\n                          resolve(resp)\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n\n          listOfWorkers($FullName){\n\n              this.addWorkerPage = $FullName\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getWorkers',resp.data)\n                          this.getWorkers = resp.data.results\n                          resolve(resp)\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n          pageAddW($FullName) {\n          this.addWorkerPage = $FullName\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Department/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('DEPARTMENT',resp.data)\n                          this.departments = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n\n                  //get Speciality\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/EmployeeType/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('SPECIALITY',resp.data)\n                          this.specialities = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n                  //get Sel'skii okrug\n                  axios({url: 'https://vaccinsystem.herokuapp.com/farmer/RuralDistrict/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('OKRUG',resp.data)\n                          this.okrugs = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n              })\n\n        },\n\n\n          createNew(){\n            let id = this.IIN\n            let employeeskey = this.passw\n            let name = this.fio\n            let employeetype = this.selectedSpec\n            let department = this.selectedDep\n            let ruraldistrict = this.selectedSO\n            let phone = this.phone\n\n              console.log(ruraldistrict)\n            this.$store.dispatch('createWorker', { id, employeeskey,name,employeetype,department,ruraldistrict ,phone})\n                .then(() => {\n                    console.log(\"TIUTUTU\")\n                })\n                .catch(err => console.log(err))\n            console.log(\"in creat new fuction\")\n\n        }\n      }\n    }\n</script>\n\n<style scoped>\ninput{\n  /*border-color: #e4ecf1;*/\n  /*border-radius: 0.2rem;*/\n  /*border-top-color: #dbe2e7;*/\n  /*border-style: groove;*/\n  /*height: 2.2rem;*/\n}\n</style>\n"],"sourceRoot":"src/views/forInput"}]}