{"remainingRequest":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js!/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/Main.vue","mtime":1545015609935},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport downloadexcel from \"vue-json-excel\";\nimport axios from 'axios';\nexport default {\n  name: \"Main\",\n  components: {\n    downloadexcel: downloadexcel\n  },\n  data: function data() {\n    return {\n      todos: [],\n      getFarmer: \"\",\n      nur: \"\",\n      info: \"\",\n      nurLen: \"\",\n      nurlist: \"\",\n      searchText: \"\",\n      result: \"\",\n      filter: \"1\",\n      animals: ['Zebra', 'Lion', 'Shark', 'Dog', 'Bear', 'Monkey'],\n      json_fields: {\n        'Complete name': 'name',\n        'Date': 'date',\n        'ed': 'city',\n        'saf': 'birthdate'\n      },\n      json_data: [{\n        'name': 'Tony Peña',\n        'city': 'New York',\n        'country': 'United States',\n        'birthdate': '1978-03-15',\n        'phone': {\n          'mobile': '1-541-754-3010',\n          'landline': '(541) 754-3010'\n        }\n      }, {\n        'name': 'Thessaloniki',\n        'city': 'Athens',\n        'country': 'Greece',\n        'birthdate': '1987-11-23',\n        'phone': {\n          'mobile': '+1 855 275 5071',\n          'landline': '(2741) 2621-244'\n        }\n      }],\n      json_meta: [[{\n        'key': 'charset',\n        'value': 'utf-8'\n      }]]\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var token = sessionStorage.getItem('token');\n    axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n    axios.get('https://vaccinsystem.herokuapp.com/livestock/LiveStock/').then(function (response) {\n      // this.logItems = response.data // this bit works fine\n      _this.responseData = response;\n    }).catch(function (err) {\n      console.log(err);\n    });\n  },\n  computed: {\n    filteredAnimals: function filteredAnimals() {\n      var self = this;\n      return this.animals.filter(function (animal) {\n        return _.includes(animal.toLowerCase(), self.searchText.toLowerCase());\n      });\n    },\n    resultCount: function resultCount() {\n      return this.nur && this.nur.length;\n    },\n    resultCount2: function resultCount2() {\n      return this.nur.typeoflivestock == \"1\" && this.nur.typeoflivestock.length;\n    },\n    orderedUsers: function orderedUsers() {\n      return _.orderBy(this.users, 'typeoflivestock');\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var token = sessionStorage.getItem('token');\n        axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n        axios({\n          url: 'https://vaccinsystem.herokuapp.com/livestock/LiveStock/',\n          method: 'GET'\n        }).then(function (resp) {\n          console.log('LIVESTOCK', resp.data);\n          _this2.nur = resp.data.results;\n          console.log(\"OOoOOOOO\", _this2.nur); // for(i in nur){\n          //     if(i.id != 1){\n          //         console.log(\"1\")\n          //     }\n          // }\n\n          _this2.result = _this2.nur.length;\n        }).catch(function (err) {\n          console.log(err);\n        });\n      });\n    },\n    Nur: function Nur() {\n      var _this3 = this;\n\n      var token = sessionStorage.getItem('token');\n      axios.defaults.headers.common['Authorization'] = \"Token \" + token;\n      axios({\n        url: 'https://vaccinsystem.herokuapp.com/livestock/LiveStock/',\n        method: 'GET'\n      }).then(function (resp) {\n        console.log('LIVESTOCK', resp.data);\n        _this3.nur = resp.data.results;\n        _this3.nurList = _this3.nur.filter(function (animal) {\n          return _.includes(animal.toLowerCase(), self.searchText.toLowerCase());\n        }); // resolve(resp)\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    Nur2: function Nur2() {\n      var id = \"2323\";\n      this.$store.dispatch('nur', {\n        id: id\n      }).then(function () {}).catch(function (err) {\n        return console.log(err);\n      });\n    },\n    created: function created() {\n      var _this4 = this;\n\n      this.$store.dispatch('main').then(function () {\n        _this4.todos = data.body;\n        console.log(\"DATA\", data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n};",{"version":3,"sources":["Main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n\n    <div>\n\n\n      <b-card>\n        <div class=\"back-color\">\n          <h5 class=\" w-75 font-italic mx-auto mb-3\">Система вакцинации - программный продукт разработки, позволяющий пользователю системы с\n            помощью панели веб-приложения осуществлять контроль вакцинации животных, вести их учёт и\n            получать необходимую документацию в электроннй или печатной форме, также вакцинаторам с помощью\n            мобильного приложения  осуществлять вакцинации по идентифицированному коду животного</h5>\n        </div>\n\n        <br>\n        <div class=\"grey-color w-75 mx-auto mb-5\">\n          <p class=\"my-3\"><strong>Основные цели системы:</strong></p>\n          <p>1.обеспечение учёта вакцинаций сельскохозяйственных животных на територии Казахстана,</p>\n          <p>2.локализация и предотвращение распространения эпидемий, в первую очередь опасных для здоровья человека,</p>\n          <p>3.организация взаимодействия между вакцинаторами и операторов,</p>\n          <p>4.выполнение нормативных требований государства в сфере вакцинирования</p>\n        </div>\n\n        <div class=\"grey-color w-75 mx-auto\">\n          <p class=\"my-3\"><strong>Функциональные возможности системы:</strong></p>\n          <p>1.регистрация владельца с присвоением уникального номера (ID код)</p>\n          <p>2.регистрация животных и учет их ID кода в программе 3)фиксация и архивирование данных по вакцинациям животных</p>\n          <p>4.формирование заданий на проведение санитарно-ветеринарных мероприятий и вакцинаций с использованием расходных материалов с нанесенным штрих-кодом и привязкой к ID коду животного для дальнейшей отправки в отчетность,</p>\n          <p>5.вакцинация животных со стационарных и мобильных устройств, имеющих доступ к сети Интернет</p>\n        </div>\n      </b-card>\n\n\n\n      <!--<b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">-->\n        <!--<b-button v-on:click=\"created\" block variant=\"primary\" class=\"mb-2\" >Добавить фермера</b-button>-->\n      <!--</b-col>-->\n      <!--<p>Number of Entries: {{ resultCount }}</p>-->\n      <!--<p>Number of Entries2: {{ resultCount2 }}</p>-->\n      <!--{{nur.length}}-->\n      <!--<div v-for=\"todo in nur\" >-->\n        <!--<p v-if=\"todo.typeoflivestock == '1'\" >{{todo.typeoflivestock}}{{todo.length}}</p>-->\n      <!--</div>-->\n      <!--<p v-for=\"user in orderedUsers\">{{ user.typeoflivestock }}</p>-->\n      <!--{{nur}}-->\n      <!--<div>-->\n        <!--<hr>-->\n        <!--<h2>Fetch Example</h2>-->\n        <!--<downloadexcel-->\n          <!--class = \"btn\"-->\n          <!--:data = \"json_data\"-->\n          <!--:fields = \"json_fields\"-->\n\n          <!--type    = \"csv\">-->\n          <!--Download Excel-->\n        <!--</downloadexcel>-->\n      <!--</div>-->\n      <!--<div id=\"simple-filter\">-->\n        <!--<input type=\"text\" v-model=\"searchText\" />-->\n        <!--<ul>-->\n          <!--<li v-for=\"animal in filteredAnimals\">{{ animal }}</li>-->\n        <!--</ul>-->\n      <!--</div>-->\n      <!--<b-button v-on:click=\"Nur\" block variant=\"primary\" class=\"mb-2\" >Nurzhik</b-button>-->\n      <!--<b-button v-on:click=\"Nur2\" block variant=\"primary\" class=\"mb-2\" >Nurzhik2</b-button>-->\n      <!--{{result}}-->\n    </div>\n</template>\n\n\n<script>\n\n\n  import downloadexcel from \"vue-json-excel\";\n  import axios from 'axios';\n\n\n  export default {\n        name: \"Main\",\n      components: {\n        downloadexcel,\n      },\n      data: () => {\n        return {\n          todos: [],\n            getFarmer:\"\",\n            nur: \"\",\n            info: \"\",\n            nurLen: \"\",\n            nurlist: \"\",\n            searchText:\"\",\n            result:\"\",\n            filter: \"1\",\n\n            animals: ['Zebra', 'Lion', 'Shark', 'Dog', 'Bear', 'Monkey'],\n          json_fields: {\n            'Complete name': 'name',\n            'Date': 'date',\n            'ed': 'city',\n            'saf': 'birthdate'\n          },\n          json_data: [\n            {\n              'name': 'Tony Peña',\n              'city': 'New York',\n              'country': 'United States',\n              'birthdate': '1978-03-15',\n              'phone': {\n                'mobile': '1-541-754-3010',\n                'landline': '(541) 754-3010'\n              }\n            },\n            {\n              'name': 'Thessaloniki',\n              'city': 'Athens',\n              'country': 'Greece',\n              'birthdate': '1987-11-23',\n              'phone': {\n                'mobile': '+1 855 275 5071',\n                'landline': '(2741) 2621-244'\n              }\n            }\n          ],\n          json_meta: [\n            [\n              {\n                'key': 'charset',\n                'value': 'utf-8'\n              }\n            ]\n          ],\n        }\n      },\n\n      created: function () {\n          this.fetchData();\n      },\n      mounted() {\n          const token = sessionStorage.getItem('token');\n          axios.defaults.headers.common['Authorization'] = \"Token \" + token\n          axios.get('https://vaccinsystem.herokuapp.com/livestock/LiveStock/')\n              .then(response => {\n                  // this.logItems = response.data // this bit works fine\n                  this.responseData = response\n              })\n              .catch(err => {console.log(err)\n              })\n      },\n      computed: {\n          filteredAnimals: function() {\n              var self = this;\n              return this.animals.filter(function (animal) {\n                  return _.includes(animal.toLowerCase(), self.searchText.toLowerCase());\n              });\n          },\n          resultCount () {\n              return this.nur && this.nur.length\n          },\n          resultCount2 () {\n              return this.nur.typeoflivestock==\"1\" && this.nur.typeoflivestock.length\n          },\n          orderedUsers: function () {\n              return _.orderBy(this.users, 'typeoflivestock')\n          }\n\n      },\n      methods:{\n          fetchData: function () {\n              return new Promise((resolve, reject) => {\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  axios({url: 'https://vaccinsystem.herokuapp.com/livestock/LiveStock/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('LIVESTOCK',resp.data)\n                          this.nur = resp.data.results\n                          console.log(\"OOoOOOOO\",this.nur)\n                          // for(i in nur){\n                          //     if(i.id != 1){\n                          //         console.log(\"1\")\n                          //     }\n                          // }\n\n\n                          this.result = this.nur.length;\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n\n          },\n            Nur(){\n\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                axios({url: 'https://vaccinsystem.herokuapp.com/livestock/LiveStock/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('LIVESTOCK',resp.data)\n                        this.nur = resp.data.results\n                        this.nurList =  this.nur.filter(function (animal) {\n                            return _.includes(animal.toLowerCase(), self.searchText.toLowerCase());\n                        });\n\n                        // resolve(resp)\n                    })\n                    .catch(err => {console.log(err)\n                    })\n            },\n\n\n          Nur2(){\n              let id = \"2323\"\n              this.$store.dispatch('nur', { id})\n                  .then(() => {\n\n                  })\n                  .catch(err => console.log(err))\n\n          },\n        created() {\n\n            this.$store.dispatch('main')\n                .then(() => {\n                        this.todos = data.body\n                        console.log(\"DATA\",data)\n                })\n                .catch(err => console.log(err))\n        },\n      }\n    }\n\n\n</script>\n\n<style scoped>\n  .back-color{\n    color: #17799c;\n  }\n  .grey-color{\n    color: #666;\n  }\n\n</style>\n"],"sourceRoot":"src/views"}]}