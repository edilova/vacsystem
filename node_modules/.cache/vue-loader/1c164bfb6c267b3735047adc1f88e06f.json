{"remainingRequest":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Farmer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Farmer.vue","mtime":1550395524118},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { shuffleArray } from '@/shared/utils'\nimport cTable from './Table.vue'\nimport axios from 'axios';\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.min.css' // Ensure you are using css-loader\n\nVue.use(Vuetify)\n\nconst someData = () => shuffleArray([\n  {ИИН: 12345678, ФИО: 'Edilova Aruzhan' , специальность: 'spec', отдел: 'depart', номер: '+7 707 123 34 45'},\n])\n  export default {\n      name: \"Farmer\",\n    components: {cTable},\n    data: () => {\n      return {\n        items: someData,\n        itemsArray: someData(),\n        getFarmer:\"\",\n        getFarmerLength:\"\",\n        pageid: \"1\",\n        linkPrev:\"\",\n        linkNext:\"\",\n        fields: [\n          {key: 'ИИН', label: 'User', sortable: true},\n          {key: 'ФИО'},\n          {key: 'специальность'},\n          {key: 'отдел', sortable: true},\n          {key: 'номер'},\n        ],\n        todos: [],\n          currentPage: 1,\n          perPage: 10,\n          totalRows: 0\n      }\n    },\n      created: function () {\n          this.fetchData();\n      },\n    methods: {\n        pagebtnPrevious(){\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n                //get Department\n                axios({url: this.linkPrev, method: 'GET' })\n\n                    .then(resp => {\n                        console.log('getFarmer',resp.data)\n                        this.getFarmer = resp.data.results\n                        this.linkPrev = resp.data.links.previous\n                        this.linkNext = resp.data.links.next\n                        this.getFarmerLength = resp.data.count % 100\n                        console.log('LENGTHHHHH', resp.data.count)\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n            })\n        },\n        pagebtnNext(){\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n                //get Department\n                axios({url: this.linkNext, method: 'GET' })\n\n                    .then(resp => {\n                        console.log('getFarmer',resp.data)\n                        this.getFarmer = resp.data.results\n                        this.linkPrev = resp.data.links.previous\n                        this.linkNext = resp.data.links.next\n                        this.getFarmerLength = resp.data.count % 100\n                        console.log('LENGTHHHHH', resp.data.count)\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n            })\n        },\n        getBadge (status) {\n            return status === 'Active' ? 'success'\n                : status === 'Inactive' ? 'secondary'\n                    : status === 'Pending' ? 'warning'\n                        : status === 'Banned' ? 'danger' : 'primary'\n        },\n        getRowCount (items) {\n            return items.length\n        },\n        userLink (id) {\n            return `users/${id.toString()}`\n        },\n        rowClicked (item) {\n            const userLink = this.userLink(item.id)\n            this.$router.push({path: userLink})\n        },\n\n\n\n\n\n\n        fetchData: function () {\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n                //get Department\n                axios({url: 'https://vaccinsystem.herokuapp.com/farmer/Farmer/?count', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('getFarmer',resp.data)\n                        this.getFarmer = resp.data.results\n                        this.linkPrev = resp.data.links.previous\n                        this.linkNext = resp.data.links.next\n                        this.getFarmerLength = resp.data.count % 100\n                        console.log('LENGTHHHHH', resp.data.count)\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n            })\n        },\n    }\n  }\n",{"version":3,"sources":["Farmer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Farmer.vue","sourceRoot":"src/views/forInput","sourcesContent":["<template>\n  <div>\n    <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">\n      <b-button block variant=\"primary\" class=\"mb-2\" to=\"/addfarmer\">Добавить фермера</b-button>\n    </b-col>\n    <b-col lg=\"12\">\n      <div>\n        <b-card>\n          <!--{{getWorkers}}-->\n          <table class=\"table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">ИИН</th>\n              <th scope=\"col\">Имя</th>\n              <th scope=\"col\">тел.</th>\n              <th scope=\"col\">email</th>\n              <th scope=\"col\">адрес</th>\n              <th scope=\"col\">поселок</th>\n            </tr>\n            </thead>\n            <tbody v-for=\"far in getFarmer\">\n            <tr>\n              <td>{{far.id}}</td>\n              <td>{{far.name}}</td>\n              <td>{{far.phone}}</td>\n              <td>{{far.email}}</td>\n              <td>{{far.address}}</td>\n              <td>{{far.village}}</td>\n            </tr>\n            </tbody>\n          </table>\n          <nav>\n            <!--<b-pagination :total-rows=\"3\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>-->\n\n            <div class=\"pagination d-flex flex-row justify-content-between w-100\">\n              <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">\n                <b-button block variant=\"primary\" class=\"mb-2\" @click=\"pagebtnPrevious\">Пред</b-button>\n              </b-col>\n              <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">\n                <b-button block variant=\"primary\" class=\"mb-2\" @click=\"pagebtnNext\">След</b-button>\n              </b-col>\n              <!--<b-button block variant=\"primary\"  class=\"text-left\" @click=\"pagebtnPrevious\">Пред</b-button>-->\n              <!--&lt;!&ndash;<p class=\"m-0 text-center\">{{pageid}}</p>&ndash;&gt;-->\n              <!--<b-button block variant=\"primary\"  class=\"text-right\" @click=\"pagebtnNext\">След</b-button>-->\n            </div>\n\n\n\n\n          </nav>\n        </b-card>\n      </div>\n    </b-col>\n  </div>\n</template>\n\n\n<script>\n  import { shuffleArray } from '@/shared/utils'\n  import cTable from './Table.vue'\n  import axios from 'axios';\n  import Vue from 'vue'\n  import Vuetify from 'vuetify'\n  import 'vuetify/dist/vuetify.min.css' // Ensure you are using css-loader\n\n  Vue.use(Vuetify)\n\n  const someData = () => shuffleArray([\n    {ИИН: 12345678, ФИО: 'Edilova Aruzhan' , специальность: 'spec', отдел: 'depart', номер: '+7 707 123 34 45'},\n  ])\n    export default {\n        name: \"Farmer\",\n      components: {cTable},\n      data: () => {\n        return {\n          items: someData,\n          itemsArray: someData(),\n          getFarmer:\"\",\n          getFarmerLength:\"\",\n          pageid: \"1\",\n          linkPrev:\"\",\n          linkNext:\"\",\n          fields: [\n            {key: 'ИИН', label: 'User', sortable: true},\n            {key: 'ФИО'},\n            {key: 'специальность'},\n            {key: 'отдел', sortable: true},\n            {key: 'номер'},\n          ],\n          todos: [],\n            currentPage: 1,\n            perPage: 10,\n            totalRows: 0\n        }\n      },\n        created: function () {\n            this.fetchData();\n        },\n      methods: {\n          pagebtnPrevious(){\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: this.linkPrev, method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getFarmer',resp.data)\n                          this.getFarmer = resp.data.results\n                          this.linkPrev = resp.data.links.previous\n                          this.linkNext = resp.data.links.next\n                          this.getFarmerLength = resp.data.count % 100\n                          console.log('LENGTHHHHH', resp.data.count)\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n          pagebtnNext(){\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: this.linkNext, method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getFarmer',resp.data)\n                          this.getFarmer = resp.data.results\n                          this.linkPrev = resp.data.links.previous\n                          this.linkNext = resp.data.links.next\n                          this.getFarmerLength = resp.data.count % 100\n                          console.log('LENGTHHHHH', resp.data.count)\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n          getBadge (status) {\n              return status === 'Active' ? 'success'\n                  : status === 'Inactive' ? 'secondary'\n                      : status === 'Pending' ? 'warning'\n                          : status === 'Banned' ? 'danger' : 'primary'\n          },\n          getRowCount (items) {\n              return items.length\n          },\n          userLink (id) {\n              return `users/${id.toString()}`\n          },\n          rowClicked (item) {\n              const userLink = this.userLink(item.id)\n              this.$router.push({path: userLink})\n          },\n\n\n\n\n\n\n          fetchData: function () {\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/farmer/Farmer/?count', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getFarmer',resp.data)\n                          this.getFarmer = resp.data.results\n                          this.linkPrev = resp.data.links.previous\n                          this.linkNext = resp.data.links.next\n                          this.getFarmerLength = resp.data.count % 100\n                          console.log('LENGTHHHHH', resp.data.count)\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n      }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}