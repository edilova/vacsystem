{"remainingRequest":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/users/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/users/Users.vue","mtime":1551457008263},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport usersData from './UsersData'\nimport axios from 'axios'\nexport default {\n  name: 'Users',\n  props: {\n    caption: {\n      type: String,\n      default: 'Users'\n    },\n    hover: {\n      type: Boolean,\n      default: true\n    },\n    striped: {\n      type: Boolean,\n      default: true\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => {\n    return {\n      items: usersData.filter((user) => user.id < 42),\n        getLivestock:\"\",\n      fields: [\n        {key: 'name'},\n        {key: 'BIN'},\n        {key: 'phone'},\n        {key: 'mobphone'},\n        {key: 'email'}\n      ],\n      currentPage: 1,\n      perPage: 10,\n      totalRows: 0\n    }\n  },\n  computed: {\n  },\n    created: function () {\n        this.fetchData();\n    },\n  methods: {\n    getBadge (status) {\n      return status === 'Active' ? 'success'\n        : status === 'Inactive' ? 'secondary'\n          : status === 'Pending' ? 'warning'\n            : status === 'Banned' ? 'danger' : 'primary'\n    },\n    getRowCount (items) {\n      return items.length\n    },\n    userLink (id) {\n      return `users/${id.toString()}`\n    },\n    rowClicked (item) {\n      const userLink = this.userLink(item.id)\n      this.$router.push({path: userLink})\n    },\n\n\n\n      fetchData: function () {\n          return new Promise((resolve, reject) => {\n              // commit('auth_request')\n              console.log('promise example ');\n              const token = sessionStorage.getItem('token');\n              axios.defaults.headers.common['Authorization'] = \"Token \" + token\n              console.log(axios.defaults.headers, 'headers in get');\n\n              axios({url: 'http://185.22.65.39:7000/livestock/LiveStock/', method: 'GET' })\n\n                  .then(resp => {\n                      console.log('getLivestock',resp.data)\n                      this.getLivestock = resp.data.results\n                      this.lvlength = resp.data.count\n                      resolve(resp)\n\n\n                  })\n                  .catch(err => {console.log(err)\n                  })\n\n          })\n      },\n\n  }\n}\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"Users.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n  <b-row>\n    {{getLivestock}}\n    <b-col cols=\"12\" xl=\"12\">\n      <transition name=\"slide\">\n      <b-card :header=\"caption\">\n        <b-table :hover=\"hover\" :striped=\"striped\" :bordered=\"bordered\" :small=\"small\" :fixed=\"fixed\" responsive=\"sm\" :items=\"items\" :fields=\"fields\" :current-page=\"currentPage\" :per-page=\"perPage\" @row-clicked=\"rowClicked\">\n          <template slot=\"id\" slot-scope=\"data\">\n            <strong>{{getLivestock.id}}</strong>\n          </template>\n          <template slot=\"name\" slot-scope=\"data\">\n            <strong>{{getLivestock.name}}</strong>\n          </template>\n          <!--<template slot=\"status\" slot-scope=\"data\">-->\n            <!--<b-badge :variant=\"getBadge(data.item.status)\">{{data.item.status}}</b-badge>-->\n          <!--</template>-->\n        </b-table>\n        <nav>\n          <b-pagination size=\"sm\" :total-rows=\"getRowCount(items)\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n        </nav>\n      </b-card>\n      </transition>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\nimport usersData from './UsersData'\nimport axios from 'axios'\nexport default {\n  name: 'Users',\n  props: {\n    caption: {\n      type: String,\n      default: 'Users'\n    },\n    hover: {\n      type: Boolean,\n      default: true\n    },\n    striped: {\n      type: Boolean,\n      default: true\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => {\n    return {\n      items: usersData.filter((user) => user.id < 42),\n        getLivestock:\"\",\n      fields: [\n        {key: 'name'},\n        {key: 'BIN'},\n        {key: 'phone'},\n        {key: 'mobphone'},\n        {key: 'email'}\n      ],\n      currentPage: 1,\n      perPage: 10,\n      totalRows: 0\n    }\n  },\n  computed: {\n  },\n    created: function () {\n        this.fetchData();\n    },\n  methods: {\n    getBadge (status) {\n      return status === 'Active' ? 'success'\n        : status === 'Inactive' ? 'secondary'\n          : status === 'Pending' ? 'warning'\n            : status === 'Banned' ? 'danger' : 'primary'\n    },\n    getRowCount (items) {\n      return items.length\n    },\n    userLink (id) {\n      return `users/${id.toString()}`\n    },\n    rowClicked (item) {\n      const userLink = this.userLink(item.id)\n      this.$router.push({path: userLink})\n    },\n\n\n\n      fetchData: function () {\n          return new Promise((resolve, reject) => {\n              // commit('auth_request')\n              console.log('promise example ');\n              const token = sessionStorage.getItem('token');\n              axios.defaults.headers.common['Authorization'] = \"Token \" + token\n              console.log(axios.defaults.headers, 'headers in get');\n\n              axios({url: 'http://185.22.65.39:7000/livestock/LiveStock/', method: 'GET' })\n\n                  .then(resp => {\n                      console.log('getLivestock',resp.data)\n                      this.getLivestock = resp.data.results\n                      this.lvlength = resp.data.count\n                      resolve(resp)\n\n\n                  })\n                  .catch(err => {console.log(err)\n                  })\n\n          })\n      },\n\n  }\n}\n</script>\n\n<style scoped>\n.card-body >>> table > tbody > tr > td {\n  cursor: pointer;\n}\n</style>\n"]}]}