{"remainingRequest":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Workers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/src/views/forInput/Workers.vue","mtime":1550398352859},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aruzhan/WebstormProjects/vacwithbackend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { shuffleArray } from '@/shared/utils'\nimport cTable from './Table.vue'\nimport axios from 'axios'\n\nconst someData = () => shuffleArray([\n  {ИИН: 12345678, ФИО: 'Edilova Aruzhan' , специальность: 'spec', отдел: 'depart', номер: '+7 707 123 34 45'},\n])\n  export default {\n      name: \"Workers\",\n    components: {cTable},\n    data: () => {\n      return {\n        items: someData,\n        itemsArray: someData(),\n        message: \"\",\n        todos: \"\",\n        departments:\"\",\n        specialities:\"\",\n        okrugs: \"\",\n        getWorkers:\"\",\n        listOfEmp: \"\",\n        // todos.name:\n        todosname:\"\",\n        options:['a','a'],\n        selectedSpec: \"\",\n        selectedDep: \"\",\n        selectedSO: \"\",\n        fields: [\n          {key: 'ИИН', label: 'User', sortable: true},\n          {key: 'ФИО'},\n          {key: 'специальность'},\n          {key: 'отдел', sortable: true},\n          {key: 'номер'},\n        ],\n        addWorkerPage: 'notadd',\n        IIN: \"\",\n        passw: \"\",\n        fio: \"\",\n        spec:\"\",\n        otdel:\"\",\n        phone:\"\",\n          currentPage: 1,\n          perPage: 10,\n          totalRows: 0\n      }\n    },\n      created: function () {\n          this.fetchData();\n      },\n    methods:{\n        getBadge (status) {\n            return status === 'Active' ? 'success'\n                : status === 'Inactive' ? 'secondary'\n                    : status === 'Pending' ? 'warning'\n                        : status === 'Banned' ? 'danger' : 'primary'\n        },\n        getRowCount (items) {\n            return items.length\n        },\n        userLink (id) {\n            return `users/${id.toString()}`\n        },\n        rowClicked (item) {\n            const userLink = this.userLink(item.id)\n            this.$router.push({path: userLink})\n        },\n\n        fetchData: function () {\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n                //get Department\n                axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('getWorkers',resp.data)\n                        this.getWorkers = resp.data.results\n                        resolve(resp)\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n            })\n        },\n\n        listOfWorkers($FullName){\n\n            this.addWorkerPage = $FullName\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n                //get Department\n                axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('getWorkers',resp.data)\n                        this.getWorkers = resp.data.results\n                        resolve(resp)\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n            })\n        },\n        pageAddW($FullName) {\n        this.addWorkerPage = $FullName\n            return new Promise((resolve, reject) => {\n                // commit('auth_request')\n                console.log('promise example ');\n                const token = sessionStorage.getItem('token');\n                axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                console.log(axios.defaults.headers, 'headers in get');\n\n\n\n                //get Department\n                axios({url: 'https://vaccinsystem.herokuapp.com/employee/Department/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('DEPARTMENT',resp.data)\n                        this.departments = resp.data.results\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n\n                //get Speciality\n                axios({url: 'https://vaccinsystem.herokuapp.com/employee/EmployeeType/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('SPECIALITY',resp.data)\n                        this.specialities = resp.data.results\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n\n                //get Sel'skii okrug\n                axios({url: 'https://vaccinsystem.herokuapp.com/farmer/RuralDistrict/', method: 'GET' })\n\n                    .then(resp => {\n                        console.log('OKRUG',resp.data)\n                        this.okrugs = resp.data.results\n                        resolve(resp)\n\n\n                    })\n                    .catch(err => {console.log(err)\n                    })\n            })\n\n      },\n\n\n        createNew(){\n          let id = this.IIN\n          let employeeskey = this.passw\n          let name = this.fio\n          let employeetype = this.selectedSpec\n          let department = this.selectedDep\n          let ruraldistrict = this.selectedSO\n          let phone = this.phone\n\n            console.log(ruraldistrict)\n          this.$store.dispatch('createWorker', { id, employeeskey,name,employeetype,department,ruraldistrict ,phone})\n              .then(() => {\n                  console.log(\"TIUTUTU\")\n              })\n              .catch(err => console.log(err))\n          console.log(\"in creat new fuction\")\n\n      }\n    }\n  }\n",{"version":3,"sources":["Workers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Workers.vue","sourceRoot":"src/views/forInput","sourcesContent":["<template>\n    <div>\n      <div class=\"row\">\n        <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"mb-3 mb-xl-0 \">\n          <b-button v-on:click=\"pageAddW('add')\"  block variant=\"primary\" class=\"mb-2\" >Добавить работника</b-button>\n        </b-col>\n        <b-col cols=\"2\" sm=\"4\" md=\"2\" class=\"ml-1 mb-3 mb-xl-0 \">\n          <b-button v-on:click=\"listOfWorkers('notadd')\"  block variant=\"primary\" class=\"mb-2\" >Список  работников</b-button>\n        </b-col>\n      </div>\n\n\n      <div  v-show=\"addWorkerPage == 'notadd'\">\n        <b-card>\n          <!--{{getWorkers}}-->\n          <table class=\"table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">ИИН</th>\n              <th scope=\"col\">ФИО</th>\n              <th scope=\"col\">Специальность</th>\n              <th scope=\"col\">Департамент</th>\n              <th scope=\"col\">С.О</th>\n              <th scope=\"col\">Тел.</th>\n            </tr>\n            </thead>\n            <tbody v-for=\"emp in getWorkers\">\n            <tr>\n              <th scope=\"row\">{{emp.id}}</th>\n              <td>{{emp.name}}</td>\n              <td>{{emp.employeetype}}</td>\n              <td>{{emp.department}}</td>\n              <td>{{emp.ruraldistrict}}</td>\n              <td>{{emp.phone}}</td>\n            </tr>\n            </tbody>\n          </table>\n          <nav>\n            <b-pagination :total-rows=\"totalRows\" :per-page=\"perPage\" v-model=\"currentPage\" prev-text=\"Prev\" next-text=\"Next\" hide-goto-end-buttons/>\n          </nav>\n        </b-card>\n      </div>\n\n      <div  v-show=\"addWorkerPage == 'add'\">\n        <b-card>\n          <b-form>\n            <b-form-group\n\n              description=\"ИИН Работника\"\n              label=\"ИИН Работника\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"IIN\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n\n            <b-form-group\n              description=\"пароль\"\n              label=\"Пароль\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"passw\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n            <b-form-group\n              description=\"Полное имя Работника\"\n              label=\"ФИО\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input v-model=\"fio\" id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Специальность</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\" v-model=\"selectedSpec\" >\n                  <option disabled value=\"\">Выберите специальность</option>\n                  <option v-for=\"spec in specialities\" v-bind:value=\"spec.id\">{{spec.name}}</option>\n                </select>\n              </div>\n\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Отдел</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\"  v-model=\"selectedDep\">\n                  <option disabled value=\"\">Выберите отдел</option>\n                  <option  v-for=\"de in departments\" v-bind:value=\"de.id\">{{de.name}}\n                  </option>\n\n                </select>\n              </div>\n\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <p>Сельский округ</p>\n              </div>\n\n              <div class=\"col-9\">\n                <select class=\"w-100\"  v-model=\"selectedSO\">\n                  <option disabled value=\"\">Выберите сельский округ</option>\n                  <option  v-for=\"so in okrugs\" v-bind:value=\"so.id\">{{so.name}}\n                  </option>\n                </select>\n              </div>\n\n            </div>\n\n\n\n            <b-form-group\n              description=\"Номер телефона Работника\"\n              label=\"Номер телефона\"\n              label-for=\"basicName\"\n              :label-cols=\"3\"\n              :horizontal=\"true\">\n              <b-form-input  v-model=\"phone\"  id=\"basicName\" type=\"text\" autocomplete=\"name\"></b-form-input>\n            </b-form-group>\n\n\n          </b-form>\n          <div class=\"form-actions\">\n            <b-button v-on:click=\"createNew()\" type=\"submit\" variant=\"primary\">Добавить работника</b-button>\n          </div>\n        </b-card>\n\n\n      </div>\n\n\n{{selectedDep}}\n    </div>\n</template>\n\n<script>\n  import { shuffleArray } from '@/shared/utils'\n  import cTable from './Table.vue'\n  import axios from 'axios'\n\n  const someData = () => shuffleArray([\n    {ИИН: 12345678, ФИО: 'Edilova Aruzhan' , специальность: 'spec', отдел: 'depart', номер: '+7 707 123 34 45'},\n  ])\n    export default {\n        name: \"Workers\",\n      components: {cTable},\n      data: () => {\n        return {\n          items: someData,\n          itemsArray: someData(),\n          message: \"\",\n          todos: \"\",\n          departments:\"\",\n          specialities:\"\",\n          okrugs: \"\",\n          getWorkers:\"\",\n          listOfEmp: \"\",\n          // todos.name:\n          todosname:\"\",\n          options:['a','a'],\n          selectedSpec: \"\",\n          selectedDep: \"\",\n          selectedSO: \"\",\n          fields: [\n            {key: 'ИИН', label: 'User', sortable: true},\n            {key: 'ФИО'},\n            {key: 'специальность'},\n            {key: 'отдел', sortable: true},\n            {key: 'номер'},\n          ],\n          addWorkerPage: 'notadd',\n          IIN: \"\",\n          passw: \"\",\n          fio: \"\",\n          spec:\"\",\n          otdel:\"\",\n          phone:\"\",\n            currentPage: 1,\n            perPage: 10,\n            totalRows: 0\n        }\n      },\n        created: function () {\n            this.fetchData();\n        },\n      methods:{\n          getBadge (status) {\n              return status === 'Active' ? 'success'\n                  : status === 'Inactive' ? 'secondary'\n                      : status === 'Pending' ? 'warning'\n                          : status === 'Banned' ? 'danger' : 'primary'\n          },\n          getRowCount (items) {\n              return items.length\n          },\n          userLink (id) {\n              return `users/${id.toString()}`\n          },\n          rowClicked (item) {\n              const userLink = this.userLink(item.id)\n              this.$router.push({path: userLink})\n          },\n\n          fetchData: function () {\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getWorkers',resp.data)\n                          this.getWorkers = resp.data.results\n                          resolve(resp)\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n\n          listOfWorkers($FullName){\n\n              this.addWorkerPage = $FullName\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Employee/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('getWorkers',resp.data)\n                          this.getWorkers = resp.data.results\n                          resolve(resp)\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n              })\n          },\n          pageAddW($FullName) {\n          this.addWorkerPage = $FullName\n              return new Promise((resolve, reject) => {\n                  // commit('auth_request')\n                  console.log('promise example ');\n                  const token = sessionStorage.getItem('token');\n                  axios.defaults.headers.common['Authorization'] = \"Token \" + token\n                  console.log(axios.defaults.headers, 'headers in get');\n\n\n\n                  //get Department\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/Department/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('DEPARTMENT',resp.data)\n                          this.departments = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n\n                  //get Speciality\n                  axios({url: 'https://vaccinsystem.herokuapp.com/employee/EmployeeType/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('SPECIALITY',resp.data)\n                          this.specialities = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n\n                  //get Sel'skii okrug\n                  axios({url: 'https://vaccinsystem.herokuapp.com/farmer/RuralDistrict/', method: 'GET' })\n\n                      .then(resp => {\n                          console.log('OKRUG',resp.data)\n                          this.okrugs = resp.data.results\n                          resolve(resp)\n\n\n                      })\n                      .catch(err => {console.log(err)\n                      })\n              })\n\n        },\n\n\n          createNew(){\n            let id = this.IIN\n            let employeeskey = this.passw\n            let name = this.fio\n            let employeetype = this.selectedSpec\n            let department = this.selectedDep\n            let ruraldistrict = this.selectedSO\n            let phone = this.phone\n\n              console.log(ruraldistrict)\n            this.$store.dispatch('createWorker', { id, employeeskey,name,employeetype,department,ruraldistrict ,phone})\n                .then(() => {\n                    console.log(\"TIUTUTU\")\n                })\n                .catch(err => console.log(err))\n            console.log(\"in creat new fuction\")\n\n        }\n      }\n    }\n</script>\n\n<style scoped>\ninput{\n  /*border-color: #e4ecf1;*/\n  /*border-radius: 0.2rem;*/\n  /*border-top-color: #dbe2e7;*/\n  /*border-style: groove;*/\n  /*height: 2.2rem;*/\n}\n</style>\n"]}]}